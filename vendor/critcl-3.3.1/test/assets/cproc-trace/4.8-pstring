/* ---------------------------------------------------------------------- */

#define ns__aproc0 "::aproc"
#ifndef CRITCL_pstring
#define CRITCL_pstring

	typedef struct critcl_pstring {
	    Tcl_Obj*    o;
	    const char* s;
	    Tcl_Size    len;
	} critcl_pstring;
    
#endif /* CRITCL_pstring _________ */

static void c__aproc0(critcl_pstring x)
{

}

static int
tcl__aproc0(ClientData cd, Tcl_Interp *interp, Tcl_Size oc, Tcl_Obj *CONST ov[])
{
  critcl_pstring _x;

  critcl_trace_cmd_args (ns__aproc0, oc, ov);

  if (oc != 2) {
    Tcl_WrongNumArgs(interp, 1, ov, "x");
    return critcl_trace_cmd_result (TCL_ERROR, interp);
  }

  /* (pstring x) - - -- --- ----- -------- */
	{
	_x.s = Tcl_GetStringFromObj(ov[1], &(_x.len));
	_x.o = ov[1]; }

  /* Call - - -- --- ----- -------- */
  c__aproc0(_x);

  /* (void return) - - -- --- ----- -------- */
	return critcl_trace_cmd_result (TCL_OK, interp);
}
