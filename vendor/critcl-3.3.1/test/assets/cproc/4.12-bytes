/* ---------------------------------------------------------------------- */

#define ns__aproc0 "::aproc"
#ifndef CRITCL_bytes
#define CRITCL_bytes

	typedef struct critcl_bytes {
	    Tcl_Obj*             o;
	    const unsigned char* s;
	    Tcl_Size             len;
	} critcl_bytes;
    
#endif /* CRITCL_bytes _________ */

static void c__aproc0(critcl_bytes x)
{

}

static int
tcl__aproc0(ClientData cd, Tcl_Interp *interp, Tcl_Size oc, Tcl_Obj *CONST ov[])
{
  critcl_bytes _x;

  if (oc != 2) {
    Tcl_WrongNumArgs(interp, 1, ov, "x");
    return TCL_ERROR;
  }

  /* (bytes x) - - -- --- ----- -------- */
	{
	/* Raw binary string _with_ length information */
	_x.s = Tcl_GetBytesFromObj(interp, ov[1], &(_x.len));
	if (_x.s == NULL) return TCL_ERROR;
	_x.o = ov[1]; }

  /* Call - - -- --- ----- -------- */
  c__aproc0(_x);

  /* (void return) - - -- --- ----- -------- */
	return TCL_OK;
}
